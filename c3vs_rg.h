//==================================================================
// C3VS_RG.H
// Файл определения внутренних регистров "КРЕДО-3VS"
//==================================================================
// Версия 1.0
// Исполнитель		Дата			Вид изменения
// Иванова Н.А.		31.07.2000		Создание
//==================================================================
 #define serial_1	    0x03F8
 #define serial_2	    0x02F8
 #define STATUS_ID      0x0033 //регистр STATUS/ID VME-bus

//------------------------------------------------------------------
// Регистры микросхемы интегрального обрамления
//------------------------------------------------------------------
 #define Index_FPGA     0x0028 //Регистры микросхемы интегрального
 #define Data_FPGA      0x002c //обрамления 1: Индекс и Данные.
//------------------------------------------------------------------
 #define POWER_UP	0x0000 //Регистр системных переменных модуля
 #define SYCOR      0x0001 //Регистр управления конфигурацией системы
 #define SSR  		0x0002 //Регистр служебных сигналов
 #define PSSR		0x0003 //Регистр состояния линии запросов на
			               //обслуживание перриферийных устройств
 #define VME_IRQn	0x0005 //Определяет номер прерывания, формируемое
			               //процессору со стороны VME
 #define UBTA_L		0x0006 //Устанавливают адрес ОЗУ
 #define UBTA_H     0x0007 //для блочного обмена
 #define WAR0		0x0008 //Регистр VME-окна 0
 #define MAR0		0x0009 //Регистр маски VME-окна 0
 #define WAR1		0x000A //Регистр VME-окна 1
 #define MAR1	    0x000B //Регистр маски VME-окна 1
 #define WAR2		0x000C //Регистр VME-окна 2
 #define MAR2		0x000D //Регистр маски VME-окна 2
 #define WAR3		0x000E //Регистр VME-окна 3
 #define MAR3		0x000F //Регистр маски VME-окна 3
 #define SLR0		0x0010 //Регистр Slave-адреса 0 модуля
 #define SLRM0		0x0011 //Регистр маски Slave-адреса 0 модуля
 #define SLR1		0x0012 //Регистр Slave-адреса 1 модуля
 #define SLRM1		0x0013 //Регистр маски Slave-адреса 1 модуля
 #define ICFR		0x0014 //Регистр собственного VME-адреса
			               //модуля в многопроцесс. системе
 #define USTA_L		0x0015 //Устанавливают адрес ОЗУ
 #define USTA_H		0x0016 //для Slave-обмена
 #define LCR		0x0030 //Регистр управления техническими
			               //светодиодами
 #define RLIM_C0	0x00C0 //Регистр страницы 0 сегмента 0C
 #define RLIM_C1	0x00C1 //Регистр страницы 1 сегмента 0C
 #define RLIM_C2	0x00C2 //Регистр страницы 2 сегмента 0C
 #define RLIM_C3	0x00C3 //Регистр страницы 3 сегмента 0C
 #define RLIM_D0  	0x00D0 //Регистр страницы 0 сегмента 0D
 #define RLIM_D1	0x00D1 //Регистр страницы 1 сегмента 0D
 #define RLIM_D2	0x00D2 //Регистр страницы 2 сегмента 0D
 #define RLIM_D3	0x00D3 //Регистр страницы 3 сегмента 0D
 #define RV_E0		0x00E0 //Регистр страницы 0 сегмента 0E
 #define RV_E1	 	0x00E1 //Регистр страницы 1 сегмента 0E
 #define RV_E2	  	0x00E2 //Регистр страницы 2 сегмента 0E
 #define RV_E3	  	0x00E3 //Регистр страницы 3 сегмента 0E
 #define HVR		0x00F0 //Содержит номер версии модуля
 #define NSR		0x00FF //Регистр немаскируемых прерываний

//------------------------------------------------------------------
// Регистры обращения к VIC068A
// (расположены в микросхеме интегрального обрамления)
//------------------------------------------------------------------
 #define Index_VIC	0x002A //Регистры контроллера шины VMEbus:
 #define Data_VIC   0x002F //индексный и данных
//------------------------------------------------------------------
 #define VIICR		0x0003 //Разрешение локального прерывания
 #define VICR1		0x0007 //Разрешение формирования
 #define VICR2		0x000B //соответствующего прерывания
 #define VICR3		0x000F
 #define VICR4		0x0013
 #define VICR5		0x0017
 #define VICR6		0x001B
 #define VICR7		0x001F
 #define DMASICR	0x0023 //Регистр статуса прерывания по завершению
			               //прямого доступа к памяти (DMA) локальной шины
 #define EGICR      0x004B	
 #define EGIVBR     0x005B
 #define ICGSIVBR	0x004F //Устанавливает значение вектора Status/ID во
			               //время подтверждения прерывания к глоб. перекл.
 #define LIBR		0x0057 //Устанавливает значение вектора Status/ID во
			               //время подтверждения прерывания локальной шины
 #define ICR5		0x0077 //Регистр содержит номер версии VIC068A
 #define ICR6    	0x007B //Отражает текущее состояние модуля (сброс/работа)
 #define ICR7		0x007F //Отображает статус VIC068A
 #define TTR		0x00A3 //Регистр арбитража времени
 #define LBTR		0x00A7 //Регистр определяет временные параметры
			               //устанавливаемые при работе шины
 #define BTDR		0x00AB //Определяет режимы блочных обменов шины VMEbus
 #define ICR		0x00AF //Регистр назначения режимов работы VIC068A
 #define BESR		0x00BB //Регистр содержит флаги устанавливаемые при
			               //аварийном завершении работы с шиной
 #define DMASR		0x00BF //Регистр содержит флаги устанавливаемые при
			               //аварийном завершении работы с памятью
 #define SS0CR0  	0x00C3 //Управления прямым доступом к памяти модуля
			               //по сигналу SLSEL0
 #define SS1CR0		0x00CB //Управления прямым доступом к памяти модуля
			               //по сигналу SLSEL1
 #define SS0CR1  	0x00C7 //Устанавливает временные параметры прямого
			               //доступа к памяти модуля SLSEL0
 #define SS1CR1  	0x00CF //Устанавливает временные параметры прямого
			               //доступа к памяти модуля SLSEL0
 #define RCR_		0x00D3 //Регистр устанавливает число передач
			               //блоч обмена и режим предоставл шины
 #define BTCR		0x00D7 //Регистр определяет режим блочного
			               //обмена
 #define BTLR1		0x00DB //Регистр определяет длину
 #define BTLR0		0x00DF //блочного обмена
 #define SRR		0x00E3 //Обеспечивает программно управляемое
			               //формирование SYSRESET

//------------------------------------------------------------------
// Регистры интегрированного контроллера R400EX
//------------------------------------------------------------------
 #define Index_R400EX   0x0024 //Индексный регистр и
 #define Data_R400EX    0x0026 //регистр данных
//------------------------------------------------------------------
 #define ID_R           0x0000 //Содержит номер версии микросхемы
 #define BIOS_C_R	    0x0002 //Определяет размер BIOS, DownBios, ...
 #define SHADOW1	    0x0003 //Назначает сегментам 0A-0C,0D использоваться
			                   //для ISA или для динамического ОЗУ
 #define SHADOW2	    0x0004 //Назначает сегментам 0E-0F,0D использоваться
			                   //для ISA или для динамического ОЗУ
 #define MPCR		    0x000A //Используется для доопределения начальной
			                   //конфигурации микросхемы, установленной
			                   //по сигналу POWERGOOD
 #define PCS0		    0x000D //Определяют адресное пространство, при
 #define PCS1		    0x000E //обращении к которому будет
			                   //вырабатываться соответствующий PCS#
 #define PCS2		    0x000F
 #define PCS3	  	    0x0010
 #define CLOC_C_R       0x0012
 #define DRAM_C_R       0x0013 //Используется для параметров настройки
			                   //динамического ОЗУ
 #define DRAM_T_R	    0x0014 //Установка временных характеристик
			                   //работы динамического ОЗУ
 #define WDOG_TMR	    0x0015 //Задание временного интервала работы
			                   //сторожевого таймера
 #define WDOG_C_R	    0x0016 //Определение режима работы сторожевого таймера
 #define COM_C_R        0x0019 //Дополнительная настройка выводов микросхемы,
 #define SILCR          0x0032 //регистр номера прерывания VME-bus (IPL)
			                   //используемых COM-портами
//------------------------------------------------------------------
// Регистры часов реального времени и маска прерывания RTC
//------------------------------------------------------------------
 #define Index_RTC      0x0070 //Индексный регистр и
 #define Data_RTC       0x0071 //регистр данных
//------------------------------------------------------------------
 #define POWER_UP_K     0x0010 //Копия регистра POWER_UR в CMOSе 2Б
 #define SYSRST         0x0012 //Ячейка текущего состояния системы
			                  //по рестарту 4 Б
			                  //бит 0 - !=0 и рестарт по WDT-определена ненорма
			                  //при инициализации VICa
			                  //бит 1 - !=0 и рестарт по WDT-определена ненорма
			                  //при цепочечной инициализации блоков на VME
 #define RTC_0A		   0x000A //Регистр статуса A RTC
 #define RTC_0B		   0x000B //Регистр статуса B RTC
 #define RTC_0C		   0x000C //Регистр статуса C RTC
 #define RTC_0D		   0x000D //Регистр статуса D RTC
 
 //_______________________________
 pid_t proxy=0;
 unsigned counter=0;
 
 
 
 

